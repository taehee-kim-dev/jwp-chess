<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css"
        rel="stylesheet"
        integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6"
        crossorigin="anonymous">
  <title>인비의 체스게임</title>
</head>
<style>
  .cell {
    height: 80px;
  }

  .status {
    height: 50px;
  }

  .content {
    display: table-cell;
    vertical-align: middle;
  }

  #current-turn-team-name {
    margin-bottom: 40px;
  }

  .piece-cell {
    cursor: pointer;
  }

  #exit_button {
    width: 500px;
    margin-top: 56px;
    margin-bottom: 73px;
    margin-left: auto;
    margin-right: auto;
  }
</style>
<body>

<h1 style="text-align: center; margin-top: 77px; margin-bottom: 50px;">{{responseDTO.title}}</h1>

<div id="chess-board" style="text-align: center; width: 720px; margin-left: auto; margin-right: auto">

  {{#responseDTO}}
    <div id="current-status">
      <div id="current-scores" style="display: flex">
        <div class="score status content" style="flex: 1">백 팀 : {{whitePlayerScore}}점</div>
        <div class="score status content" style="flex: 1">흑 팀 : {{blackPlayerScore}}점</div>
      </div>
      <div id="current-turn-team-name">현재 차례 : {{currentTurnTeamName}} 팀</div>
    </div>
  {{/responseDTO}}
  <div id="chess-board-out-line" style="background-image: url('/images/chess-board.jpg'); background-size: 720px 640px;">
    <div class="rank" style="display: flex">
      {{#rank8}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank8}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank7}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank7}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank6}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank6}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank5}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank5}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank4}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank4}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank3}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank3}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank2}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank2}}
    </div>

    <div class="rank" style="display: flex">
      {{#rank1}}
        <div class="cell piece-cell content" style="flex: 1">
          {{.}}
        </div>
      {{/rank1}}
    </div>
  </div>
</div>

<div style="text-align: center">
  <button id="exit_button" class="btn btn-outline-danger" onclick="exitConfirm();">게임 나가기</button>
</div>

{{#responseDTO}}
  <div id="game-id" style="display: none">{{gameId}}</div>
  <div id="is-king-dead" style="display: none">{{isKingDead}}</div>
  <div id="before-turn-team-name" style="display: none">{{beforeTurnTeamName}}</div>
{{/responseDTO}}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
        crossorigin="anonymous"></script>
<script type="text/javascript">
  const HOME = 'http://localhost:8080';

  const piece_cells = document.getElementsByClassName("piece-cell");

  const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];
  const files_size_in_one_rank = files.length;
  let current_rank = 8;
  let current_file_index = 0;
  for (let i = 0; i < piece_cells.length; i++) {
    piece_cells[i].id = files[current_file_index] + String(current_rank);
    current_file_index += 1;
    if ((i + 1) % files_size_in_one_rank === 0) {
      current_rank -= 1;
      current_file_index = 0;
    }
  }

  for (let i = 0; i < piece_cells.length; i++) {
    const img = document.createElement('IMG');
    img.style.width = '100%';
    img.style.height = '100%';
    if (piece_cells[i].innerText === 'P') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-pawn.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'R') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-rook.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'N') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-knight.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'B') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-bishop.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'Q') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-queen.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'K') {
      piece_cells[i].innerText = '';
      img.src = '/images/black-king.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'p') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-pawn.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'r') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-rook.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'n') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-knight.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'b') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-bishop.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'q') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-queen.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === 'k') {
      piece_cells[i].innerText = '';
      img.src = '/images/white-king.png';
      img.id = piece_cells[i].id;
    }
    if (piece_cells[i].innerText === '.') {
      piece_cells[i].innerText = '';
      img.id = piece_cells[i].id;
      continue;
    }
    piece_cells[i].appendChild(img);
  }

  let is_start_position_clicked = false;
  let start_position = null;
  let destination = null;

  for (let i = 0; i < piece_cells.length; i++) {
    piece_cells[i].addEventListener('click', (event) => {
      if (!is_start_position_clicked) {
        start_position = event.target.id;
        is_start_position_clicked = true;
        return;
      }
      destination = event.target.id;
      request_move_post();
    });
  }

  const game_id = document.getElementById('game-id').innerText;

  function request_move_post() {
    const xhr = new XMLHttpRequest();
    xhr.open('POST', '/move', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.responseType = 'json';
    xhr.send(JSON.stringify({
      gameId: game_id,
      startPosition: start_position,
      destination: destination
    }));
    start_position = null;
    destination = null;
    is_start_position_clicked = false;
    xhr.onload = function () {
      const move_response = xhr.response;
      if (move_response['moveError']) {
        alert(move_response['errorMessage']);
        return;
      }
      window.location.href = HOME + '/rooms?id=' + game_id;
    };
  }

  const is_king_dead = document.getElementById('is-king-dead');
  if (is_king_dead.innerText === "true") {
    const before_turn_team_name = document.getElementById('before-turn-team-name');
    alert(before_turn_team_name.innerText + ' 팀이 이겼습니다.');
    window.location.href = HOME + '/delete?id=' + game_id;
  }

  function exitConfirm() {
    const is_exit = confirm('게임을 나가면 다시 들어올 수 없습니다. 정말 나가시겠습니까?');
    if (!is_exit) {
      return false;
    }
    window.location.href = HOME + '/delete?id=' + game_id;
  }
</script>
</body>
</html>